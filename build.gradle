plugins {
    id 'fabric-loom' version "0.7-SNAPSHOT" // To use chocoloom, change the version to a commit hash
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def getVersionMetadata() {
    // CI builds version numbers
    def build_id = System.getenv("RELEASE_NUMBER")
    if (build_id != null) {
        return build_id + ".0.0"
    }

    // Development builds
    if (grgit == null) {
        return "dev"
    }

    // Named development builds
    def id = grgit.head().abbreviatedId
    if (!grgit.status().clean) {
        id += "-dirty"
    }

    return "rev.${id}"
}

archivesBaseName = "${project.mod_id}-${project.minecraft_version}"
version = "${getVersionMetadata()}"
group = project.maven_group

repositories {
    maven {
        name = "legacy-fabric"
        url = "https://maven.legacyfabric.net"
    }
}

// Comment out this block if you're using Chocoloom
// Comment when using loom 0.10
minecraft {
    intermediaryUrl = {
        return "https://maven.legacyfabric.net/net/fabricmc/intermediary/" + it + "/intermediary-" + it + "-v2.jar";
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API provides hooks for events, item registration, and more. As most mods will need this, it's included by default.
    // If you know for a fact you don't, it's not required and can be safely removed.
    //modImplementation ("net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${fabric_version}") {
    //	exclude module: "fabric-loader-1.8.9"
    //}

    // Hacks that make mac os work
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
        implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
        implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
    }
}

// More hacks that make mac os work
if (System.getProperty("os.name").toLowerCase().contains("mac")) {
    configurations.all {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
                substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
            }
            force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
        }
    }
}

processResources {
    inputs.property "mod_id", project.mod_id
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "mod_id": project.mod_id, "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}